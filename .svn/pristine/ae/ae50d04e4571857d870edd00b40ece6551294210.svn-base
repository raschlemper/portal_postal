package com.portalpostal.validation;

import com.portalpostal.model.ConfiguracaoFinanceiro;

public class ConfiguracaoFinanceiroValidation extends Validation<ConfiguracaoFinanceiro>{

    @Override
    public boolean validar(ConfiguracaoFinanceiro configuracao) {
        if(!validarFavorecido(configuracao)) return false;
        if(!validarHistorico(configuracao)) return false;
        if(!validarPlanoConta(configuracao)) return false;
        if(!validarCentroCusto(configuracao)) return false;
        if(!validarPeriodoLancamento(configuracao)) return false;
        if(!validarPeriodoLancamentoProgramado(configuracao)) return false;
        if(!validarPeriodoLancamentoProgramado(configuracao)) return false;
        return true;
    }    

    public boolean validarFavorecido(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getFavorecido())) return true; 
        setMsg("Selecione o favorecido!");
        return false;        
    }      

    public boolean validarHistorico(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getHistorico())) return true; 
        setMsg("Selecione o histórico!");
        return false;        
    }      

    public boolean validarPlanoConta(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getPlanoConta())) return true; 
        setMsg("Selecione o plano de contas!");
        return false;        
    }      

    public boolean validarCentroCusto(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getCentroCusto())) return true; 
        setMsg("Selecione o centro de custos!");
        return false;        
    } 
      
    public boolean validarPeriodoLancamento(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getPeriodoLancamento())) return true; 
        setMsg("Selecione o período do lançamento!");
        return false;        
    }     
      
    public boolean validarPeriodoLancamentoProgramado(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getPeriodoLancamentoProgramado())) return true; 
        setMsg("Selecione o período do lançamento programado!");
        return false;        
    }    
      
    public boolean validarLimiteLancamentoProgramado(ConfiguracaoFinanceiro configuracao) {          
        if(campoNotNull(configuracao.getLimiteLancamento())) return true; 
        setMsg("Selecione o limite do lançamento!");
        return false;        
    } 
    
}
